/**
 * Samsara API
 * # Introduction The Samsara REST API lets you interact with the Samsara Cloud from anything that can send an HTTP request. With the Samsara API you can build powerful applications and custom solutions with sensor data.  Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets. If you’re familiar with what you can build with a REST API, the following API reference guide will be your go-to resource.  API access to the Samsara cloud is available to all Samsara administrators. If you’d like to try the API, [contact us](https://www.samsara.com/free-trial). The API is currently in beta and may be subject to frequent changes.  # Connecting to the API There are two ways to connect to the API. If you prefer to use the API in Javascript or Python, we supply SDKs which you can download here: [Javascript SDK](https://github.com/samsarahq/samsara-js), [Python SDK](https://github.com/samsarahq/samsara-python).  If you’d rather use another language to interact with the Samsara API, the endpoints and examples are in the reference guide below.  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SamsaraApi);
  }
}(this, function(expect, SamsaraApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SamsaraApi.VehicleMaintenance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VehicleMaintenance', function() {
    it('should create an instance of VehicleMaintenance', function() {
      // uncomment below and update the code to test VehicleMaintenance
      //var instane = new SamsaraApi.VehicleMaintenance();
      //expect(instance).to.be.a(SamsaraApi.VehicleMaintenance);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new SamsaraApi.VehicleMaintenance();
      //expect(instance).to.be();
    });

    it('should have the property j1939 (base name: "j1939")', function() {
      // uncomment below and update the code to test the property j1939
      //var instane = new SamsaraApi.VehicleMaintenance();
      //expect(instance).to.be();
    });

    it('should have the property passenger (base name: "passenger")', function() {
      // uncomment below and update the code to test the property passenger
      //var instane = new SamsaraApi.VehicleMaintenance();
      //expect(instance).to.be();
    });

  });

}));
